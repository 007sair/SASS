//------------------
// CSS3
//------------------
@import "prefixer";

// px to rem
// @param  {[number]} $px      		 [px] 640的设计稿尺寸
@function toREM($px){
	@return $px/40 + rem;
}

// css3
@mixin radius($radius) {
	@include prefixer(border-radius, $radius);
}

@mixin shadow($x, $y, $blur, $color) {
	@include prefixer(box-shadow, $x $y $blur $color);
}

@mixin box-sizing($type){
	@include prefixer(box-sizing, $type);
}

@mixin linear-gradient($from, $to) {
    /* Fallback for sad browsers */
    background-color: $to;
    /* Mozilla Firefox */
    background-image:-moz-linear-gradient($from, $to);
    /* Opera */
    background-image:-o-linear-gradient($from, $to);
    /* WebKit (Chrome 11+) */
    background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, $from), color-stop(1, $to));
    /* WebKit (Safari 5.1+, Chrome 10+) */
    background-image: -webkit-linear-gradient($from, $to);
    /* IE10 */
    background-image: -ms-linear-gradient($from, $to);
    /* W3C */
    background-image: linear-gradient($from, $to);
}

// 垂直居中 绝对定位版 css3
// @param  {[string]} $direction      [both] 上下左右都设置,[horizontal] 左右居中,[vertical] 上下居中
@mixin center-translate($direction: both) {
	position: absolute;
	@if $direction == both {
		top: 50%;
		left: 50%;
		-webkit-transform: translate3d(-50%, -50%, 0);
		-moz-transform: translate3d(-50%, -50%, 0);
		transform: translate3d(-50%, -50%, 0);
	}
	@else if $direction == horizontal {
		left: 50%;
		-webkit-transform: translate3d(-50%, 0, 0);
		-moz-transform: translate3d(-50%, 0, 0);
		transform: translate3d(-50%, 0, 0);
	}
	@else if $direction == vertical {
		top: 50%;
		-webkit-transform: translate3d(0, -50%, 0);
		-moz-transform: translate3d(0, -50%, 0);
		transform: translate3d(0, -50%, 0);
	}
}

// ellipsis 测试版
@mixin ellipsis($line: 1, $substract: 0) {
    @if $line == 1 {
        white-space: nowrap;
        text-overflow: ellipsis;
    } @else {
        display: -webkit-box;
        -webkit-line-clamp: $line;
        -webkit-box-orient: vertical;
    }
    width: 100% - $substract;
    overflow: hidden;
}

// 弹性布局
@mixin flexbox{
	display: -webkit-box;           // OLD - iOS 6-, Safari 3.1-6 //老版本语法: Safari,  iOS, Android browser, older WebKit browsers.
	display: -moz-box;              // OLD - Firefox 19- (doesn't work very well) //老版本语法: Firefox (buggy) 
	display: -ms-flexbox;           // TWEENER - IE 10 //混合版本语法: IE 10
	display: -webkit-flex;          // NEW - Chrome //新版本语法： Chrome 21+
	display: flex;                  // NEW, Spec - Opera 12.1, Firefox 20+ //新版本语法： Opera 12.1, Firefox 22+
}

// 元素垂直水平居中
// @param  {[string]} $pack      [center] 水平对齐方向,[false] 水平方向不设置
// @param  {[string]} $align      [align] 垂直对齐方向,[false] 垂直方向不设置
@mixin boxCenter($pack: center, $align: center){
	@include flexbox;
	@if($pack != false){
		//水平居中
		//老版本语法
		-webkit-box-pack: center; 
		-moz-box-pack: center; 
		//混合版本语法
		-ms-flex-pack: center; 
		//新版本语法
		-webkit-justify-content: center;
		justify-content: center;
	}
	@if($align != false){
		//垂直居中
		//老版本语法
		-webkit-box-align: center; 
		-moz-box-align: center;
		//混合版本语法
		-ms-flex-align: center; 
		//新版本语法
		-webkit-align-items: center;
		align-items: center;
	}
}


//弹性布局子元素
@mixin flexboxKids{
	-webkit-box-flex: 1;            //OLD - iOS 6-, Safari 3.1-6
	-moz-box-flex: 1;               //OLD - Firefox 19-
	-webkit-flex: 1;                //Chrome
	-ms-flex: 1;                    //IE 10
	flex: 1;                        //NEW, Spec - Opera 12.1, Firefox 20+
}

// 控制文字行数溢出点点点
// @param  {[string]} $v      [1] 默认一行对于点点点结束
@mixin boxClamp($v:1){
    overflow:hidden;
    -webkit-line-clamp: $v;
    line-clamp: $v;
    -webkit-box-orient: vertical;
    box-orient: vertical;
    display:-webkit-box;
    display:box;
}
